{
  "name": "oes",
  "version": "0.0.1",
  "description": "Order Execution System",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "build": "tsc",
    "build:watch": "tsc -w",
    "tslint": "tslint --project tsconfig.json",
    "start": "npm run build && node ./dist/index.js",
    "start:hmr": "concurrently --kill-others \"npm run build:watch\" \"nodemon ./dist/index.js\"",

    "//": "build docker image",
    "docker:build": "docker build -t oes-server-app . --no-cache --force-rm",

    "//": "run docker image (after building)",
    "docker:run": "docker run -p 80:3000 oes-server-app",

    "//": "remove all containers based on image",
    "docker:rm": "docker rm $(docker ps -a -q -f ancestor=oes-server-app)",

    "//": "remove image",
    "docker:rmi": "docker rmi oes-server-app",

    "//": "init swarm to connect to connect to local swarm",
    "docker:stack:init": "docker swarm init",

    "//": "start/restart swarm when docker-compose.yml changes (if already deployed)",
    "docker:stack:deploy": "docker stack deploy -c docker-compose.yml oes-srv",

    "//": "down the swarm (leaves single instance of the container)",
    "docker:stack:rm": "docker stack rm oes-srv",

    "//": "down the swarm (all containers)",
    "docker:stack:leave": "docker swarm leave --force"
  },
  "keywords": [
    "oes",
    "order",
    "order-execution",
    "order-execution-system"
  ],
  "author": "Erzhan Torokulov",
  "license": "MIT",
  "dependencies": {
    "koa": "^2.3.0",
    "socket.io": "^2.0.3"
  },
  "devDependencies": {
    "@types/koa": "^2.0.39",
    "@types/node": "^8.0.24",
    "@types/socket.io": "^1.4.30",
    "concurrently": "^3.5.0",
    "nodemon": "^1.11.0",
    "tslint": "^5.6.0",
    "typescript": "^2.4.2"
  }
}
